"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CUSTODIAL_ADDRESS_FACTORY_CONTRACT = exports.CUSTODIAL_GENESIS_ADDRESS_CONTRACT = exports.Chains = exports.NativeAssets = exports.AvailableChains = exports.networks = exports.TestnetTypes = void 0;
var TestnetTypes;
(function (TestnetTypes) {
    TestnetTypes["TESTNET_TYPE"] = "ethereum-rinkeby";
})(TestnetTypes || (exports.TestnetTypes = TestnetTypes = {}));
var networks;
(function (networks) {
    networks[networks["testnet"] = 0] = "testnet";
    networks[networks["mainet"] = 1] = "mainet";
})(networks || (exports.networks = networks = {}));
var AvailableChains;
(function (AvailableChains) {
    AvailableChains["BITCOIN"] = "BITCOIN";
    AvailableChains["ETHEREUM"] = "ETHEREUM";
    AvailableChains["POLYGON"] = "POLYGON";
    AvailableChains["DOGECOIN"] = "DOGECOIN";
    AvailableChains["LITECOIN"] = "LITECOIN";
    AvailableChains["BITCOINCASH"] = "BITCOINCASH";
    AvailableChains["TRON"] = "TRON";
    AvailableChains["FLOW"] = "FLOW";
    AvailableChains["CELO"] = "CELO";
    AvailableChains["XDC"] = "XDC";
    AvailableChains["RIPPLE"] = "RIPPLE";
    AvailableChains["STELLAR"] = "STELLAR";
    AvailableChains["SOLANA"] = "SOLANA";
    AvailableChains["VET"] = "VET";
    AvailableChains["NEO"] = "NEO";
    AvailableChains["BINANCE_CHAIN"] = "BINANCE_CHAIN";
    AvailableChains["BSC"] = "BSC";
    AvailableChains["LYRA"] = "LYRA";
    AvailableChains["ADA"] = "ADA";
    AvailableChains["BASE"] = "BASE";
    AvailableChains["ARBITRUM"] = "ARBITRUM";
})(AvailableChains || (exports.AvailableChains = AvailableChains = {}));
exports.NativeAssets = {
    [AvailableChains.ETHEREUM]: "ETH",
    [AvailableChains.POLYGON]: "MATIC",
    [AvailableChains.TRON]: "TRON",
    [AvailableChains.CELO]: "CELO",
    [AvailableChains.BINANCE_CHAIN]: "BNB",
    [AvailableChains.BSC]: "BSC",
    [AvailableChains.BITCOIN]: "BTC",
    [AvailableChains.LITECOIN]: "LITECOIN",
    [AvailableChains.BITCOINCASH]: "BCH",
    [AvailableChains.XDC]: "XDC",
    [AvailableChains.STELLAR]: "XLM",
    [AvailableChains.SOLANA]: "SOL",
    [AvailableChains.RIPPLE]: "XRP",
    [AvailableChains.BASE]: "ETH",
    [AvailableChains.ARBITRUM]: "ETH",
};
exports.Chains = {
    BTC: AvailableChains.BITCOIN,
    USDT: AvailableChains.ETHEREUM,
    DAI: AvailableChains.ETHEREUM,
    WBTC: AvailableChains.ETHEREUM,
    LEO: AvailableChains.ETHEREUM,
    LINK: AvailableChains.ETHEREUM,
    UNI: AvailableChains.ETHEREUM,
    FREE: AvailableChains.ETHEREUM,
    MKR: AvailableChains.ETHEREUM,
    USDC: AvailableChains.ETHEREUM,
    EUROC: AvailableChains.ETHEREUM,
    BAT: AvailableChains.ETHEREUM,
    TUSD: AvailableChains.ETHEREUM,
    BUSD: AvailableChains.ETHEREUM,
    PAX: AvailableChains.ETHEREUM,
    PAXG: AvailableChains.ETHEREUM,
    PLTC: AvailableChains.ETHEREUM,
    XCON: AvailableChains.ETHEREUM,
    ETH: AvailableChains.ETHEREUM,
    BSC: AvailableChains.BSC,
    BETH: AvailableChains.ETHEREUM,
    CAKE: AvailableChains.ETHEREUM,
    HAG: AvailableChains.ETHEREUM,
    BUSD_BSC: AvailableChains.BSC,
    QDX: AvailableChains.BSC,
    USDC_BSC: AvailableChains.BSC,
    BBTC: AvailableChains.ETHEREUM,
    BADA: AvailableChains.ETHEREUM,
    WBNB: AvailableChains.ETHEREUM,
    BDOT: AvailableChains.ETHEREUM,
    BXRP: AvailableChains.ETHEREUM,
    BLTC: AvailableChains.ETHEREUM,
    BBCH: AvailableChains.ETHEREUM,
    MMY: AvailableChains.ETHEREUM,
    DOGE: AvailableChains.DOGECOIN,
    LTC: AvailableChains.LITECOIN,
    BCH: AvailableChains.BITCOINCASH,
    TRON: AvailableChains.TRON,
    USDT_TRON: AvailableChains.TRON,
    FLOW: AvailableChains.FLOW,
    FUSD: AvailableChains.FLOW,
    CELO: AvailableChains.CELO,
    CEUR: AvailableChains.CELO,
    CUSD: AvailableChains.CELO,
    XDC: AvailableChains.XDC,
    XRP: AvailableChains.RIPPLE,
    XLM: AvailableChains.STELLAR,
    USDC_XLM: AvailableChains.STELLAR,
    TUSDC_XLM: AvailableChains.STELLAR,
    VET: AvailableChains.VET,
    NEO: AvailableChains.NEO,
    BNB: AvailableChains.BINANCE_CHAIN,
    LYRA: AvailableChains.LYRA,
    ADA: AvailableChains.ADA,
    MATIC: AvailableChains.POLYGON,
    USDC_MATIC: AvailableChains.POLYGON,
    TUSDC_MATIC: AvailableChains.POLYGON,
    TUSDC_ETH: AvailableChains.ETHEREUM,
    USDT_MATIC: AvailableChains.POLYGON,
    SOL: AvailableChains.SOLANA,
    BASE: AvailableChains.BASE,
    ARBITRUM: AvailableChains.ARBITRUM,
};
exports.CUSTODIAL_GENESIS_ADDRESS_CONTRACT = {
    testnet: {
        [AvailableChains.ETHEREUM]: "",
        [AvailableChains.POLYGON]: "",
        [AvailableChains.BSC]: "",
        [AvailableChains.TRON]: "",
        [AvailableChains.BASE]: "0xc7cB2efBa34EfE32AC990392945B8bEC5E78A4d8",
        [AvailableChains.ARBITRUM]: "",
    },
    mainnet: {
        [AvailableChains.ETHEREUM]: "",
        [AvailableChains.POLYGON]: "",
        [AvailableChains.BSC]: "",
        [AvailableChains.TRON]: "",
        [AvailableChains.BASE]: "",
        [AvailableChains.ARBITRUM]: "",
    },
};
exports.CUSTODIAL_ADDRESS_FACTORY_CONTRACT = {
    testnet: {
        [AvailableChains.ETHEREUM]: "", // sepolia
        [AvailableChains.POLYGON]: "", // polygon-mumbai
        [AvailableChains.BSC]: "", // bscscam
        [AvailableChains.TRON]: "", // nile or shasta
        [AvailableChains.BASE]: "0xA366b936b6eCD03f5da29794cd6BCaCc43C60d46", // base-sepolia
        [AvailableChains.ARBITRUM]: "", // arb-sepolia
    },
    mainnet: {
        [AvailableChains.ETHEREUM]: "",
        [AvailableChains.POLYGON]: "",
        [AvailableChains.BSC]: "",
        [AvailableChains.TRON]: "",
        [AvailableChains.BASE]: "",
        [AvailableChains.ARBITRUM]: "",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvd2FsbGV0c2RrL2NvbmZpZy9jb25zdGFudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxJQUFZLFlBRVg7QUFGRCxXQUFZLFlBQVk7SUFDdEIsaURBQWlDLENBQUE7QUFDbkMsQ0FBQyxFQUZXLFlBQVksNEJBQVosWUFBWSxRQUV2QjtBQUVELElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiw2Q0FBTyxDQUFBO0lBQ1AsMkNBQU0sQ0FBQTtBQUNSLENBQUMsRUFIVyxRQUFRLHdCQUFSLFFBQVEsUUFHbkI7QUFFRCxJQUFZLGVBc0JYO0FBdEJELFdBQVksZUFBZTtJQUN6QixzQ0FBbUIsQ0FBQTtJQUNuQix3Q0FBcUIsQ0FBQTtJQUNyQixzQ0FBbUIsQ0FBQTtJQUNuQix3Q0FBcUIsQ0FBQTtJQUNyQix3Q0FBcUIsQ0FBQTtJQUNyQiw4Q0FBMkIsQ0FBQTtJQUMzQixnQ0FBYSxDQUFBO0lBQ2IsZ0NBQWEsQ0FBQTtJQUNiLGdDQUFhLENBQUE7SUFDYiw4QkFBVyxDQUFBO0lBQ1gsb0NBQWlCLENBQUE7SUFDakIsc0NBQW1CLENBQUE7SUFDbkIsb0NBQWlCLENBQUE7SUFDakIsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxrREFBK0IsQ0FBQTtJQUMvQiw4QkFBVyxDQUFBO0lBQ1gsZ0NBQWEsQ0FBQTtJQUNiLDhCQUFXLENBQUE7SUFDWCxnQ0FBYSxDQUFBO0lBQ2Isd0NBQXFCLENBQUE7QUFDdkIsQ0FBQyxFQXRCVyxlQUFlLCtCQUFmLGVBQWUsUUFzQjFCO0FBRVksUUFBQSxZQUFZLEdBQUc7SUFDMUIsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLEVBQUUsS0FBSztJQUNqQyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPO0lBQ2xDLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU07SUFDOUIsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTTtJQUM5QixDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsRUFBRSxLQUFLO0lBQ3RDLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUs7SUFDNUIsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSztJQUNoQyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVO0lBQ3RDLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxFQUFFLEtBQUs7SUFDcEMsQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLEVBQUUsS0FBSztJQUM1QixDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLO0lBQ2hDLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUs7SUFDL0IsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSztJQUMvQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLO0lBQzdCLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEtBQUs7Q0FDbEMsQ0FBQztBQUVXLFFBQUEsTUFBTSxHQUFHO0lBQ3BCLEdBQUcsRUFBRSxlQUFlLENBQUMsT0FBTztJQUM1QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsR0FBRyxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzdCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixHQUFHLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDN0IsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLEdBQUcsRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM3QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsR0FBRyxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzdCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixLQUFLLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDL0IsR0FBRyxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzdCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsR0FBRyxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzdCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLEdBQUcsRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM3QixHQUFHLEVBQUUsZUFBZSxDQUFDLEdBQUc7SUFDeEIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixHQUFHLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDN0IsUUFBUSxFQUFFLGVBQWUsQ0FBQyxHQUFHO0lBQzdCLEdBQUcsRUFBRSxlQUFlLENBQUMsR0FBRztJQUN4QixRQUFRLEVBQUUsZUFBZSxDQUFDLEdBQUc7SUFDN0IsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLElBQUksRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM5QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsSUFBSSxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzlCLEdBQUcsRUFBRSxlQUFlLENBQUMsUUFBUTtJQUM3QixJQUFJLEVBQUUsZUFBZSxDQUFDLFFBQVE7SUFDOUIsR0FBRyxFQUFFLGVBQWUsQ0FBQyxRQUFRO0lBQzdCLEdBQUcsRUFBRSxlQUFlLENBQUMsV0FBVztJQUNoQyxJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUk7SUFDMUIsU0FBUyxFQUFFLGVBQWUsQ0FBQyxJQUFJO0lBQy9CLElBQUksRUFBRSxlQUFlLENBQUMsSUFBSTtJQUMxQixJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUk7SUFDMUIsSUFBSSxFQUFF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